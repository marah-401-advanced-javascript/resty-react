{"version":3,"sources":["components/form/form.js","components/header/header.js","components/footer/footer.js","components/if/if.js","components/results/results.js","components/history/history.js","App.js","index.js"],"names":["Form","props","history","handleUrl","e","url","target","value","setState","handleMethod","method","handleBody","body","bodyData","JSON","parse","handleSubmit","a","preventDefault","reset","state","data","console","log","dataBody","fetch","mode","cache","credentials","headers","redirect","referrerPolicy","stringify","raw","get","json","localStorage","getItem","push","response","setItem","handler","alert","onSubmit","this","className","name","type","placeholder","onChange","onClick","handelBody","React","Component","Header","to","Footer","render","condition","children","If","Children","map","child","cloneElement","Then","Result","src","History","handlerClick","bind","array","split","runHandler","LocalStorage","item","i","key","getDataLocal","App","handleForm","Headers","Response","handleRerunHistory","loading","exact","path","Main","StrictMode","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.741737af.chunk.js","sourcesContent":["import React from 'react';\nimport './form.scss';\n\nclass Form extends React.Component {\n  history=[];\n  constructor(props) {\n    super(props);\n    this.state = { method: '', url: '', body:''};\n    if(!JSON.parse(localStorage.getItem('history'))){\n      localStorage.setItem('history', JSON.stringify(this.history));\n    }\n  }\n  //watch the change of the url input\n  handleUrl = (e) => {\n    const url = e.target.value;\n    this.setState({ url });\n  };\n  //watch the radio button change\n  handleMethod = (e) => {\n    const method = e.target.value;\n    this.setState({ method });\n  };\n  //watch the body text area input\n  handleBody = (e) => {\n    const body = e.target.value;\n    const bodyData = JSON.parse(body);\n    this.setState({ body:{bodyData} });\n  };\n  \n  //when submit the form\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    e.target.reset();\n    // if there is any props coming from history \n    if(this.props.method && this.props.url && this.props.body.bodyData){\n      let method = this.props.method;\n      let url = this.props.url;\n      let body = this.props.body.bodyData;\n      this.state.method = method;\n      this.state.url = url;\n      this.state.body = {data: JSON.parse(body)};\n    }\n    else if(this.props.method && this.props.url){\n      let method = this.props.method;\n      let url = this.props.url;\n      this.state.method = method;\n      this.state.url = url;\n    }\n    console.log('METHOD',this.state.method);\n    //fetch data coming from history if any , or fetch data coming from the form directly\n    if( (this.state.url && this.state.method==='put')||(this.state.url && this.state.method==='post')) {\n      const url = this.state.url;\n      const method = this.state.method;\n      const dataBody =  this.state.body.bodyData;\n      const raw = await fetch(url, {\n        method: method,\n        mode: 'cors', \n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer', \n        body: JSON.stringify(dataBody),\n      });\n      const headers = { 'Content-Type': raw.headers.get('Content-Type') };\n      const data = await raw.json();\n      this.history = JSON.parse(localStorage.getItem('history'));\n      this.history.push({url:url, method: method, response: data });\n      localStorage.setItem('history', JSON.stringify(this.history));\n      this.props.handler(data,headers);\n\n    }else if(this.state.url && this.state.method==='get'){\n      const url = this.state.url;\n      const method = this.state.method;\n      const raw = await fetch(url, {\n        method: method,\n        mode: 'cors', \n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer', \n      });\n      const headers = { 'Content-Type': raw.headers.get('Content-Type') };\n      const data = await raw.json();\n      // if(localStorage){\n      this.history = JSON.parse(localStorage.getItem('history'));\n      this.history.push({url:url, method: method, response: data });\n\n      // }\n\n      localStorage.setItem('history', JSON.stringify(this.history));\n      this.props.handler(data,headers);\n\n     \n    }\n    else if(this.state.url && this.state.method==='delete'){\n      const url = this.state.url;\n      const method = this.state.method;\n      const raw = await fetch(url, {\n        method: method,\n        mode: 'cors', \n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer', \n      });\n      this.history = JSON.parse(localStorage.getItem('history'));\n      this.history.push({url:url, method: method, response: raw });\n      localStorage.setItem('history', JSON.stringify(this.history));\n      this.props.handler(raw);\n\n    }\n    \n    else{\n      alert('missing information');\n    }\n  };\n\n  render(){\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n\n          <div className=\"div\">\n            <input className=\"input\" name=\"urlInput\" type=\"url\" placeholder=\"Enter URL\" onChange={this.handleUrl} />\n            <button type=\"submit\">GO!</button>\n          </div>\n               \n          <div className=\"div\">\n            <span className=\"method\"><input className=\"methodGet\"  type=\"radio\" name=\"method\" value=\"get\"onClick={this.handleMethod}/>GET</span>\n            <span className=\"method\" ><input type=\"radio\" name=\"method\" value=\"post\"onClick={this.handleMethod}/>POST</span>\n            <span className=\"method\"><input type=\"radio\" name=\"method\" value=\"put\" onClick={this.handleMethod}/>PUT</span>\n            <span className=\"method\"><input type=\"radio\" name=\"method\" value=\"delete\"onClick={this.handleMethod}/>DELETE</span>\n          </div>\n\n          <textarea placeholder=\"Body\" name=\"requestBody\" onChange={this.handelBody}></textarea>\n\n        </form>\n      </>\n    );\n  }\n\n}\n  \nexport default Form;\n","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nimport './header.scss';\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>RESTy APP</h1>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <NavLink to=\"/history\">History</NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './footer.scss';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>&copy; 2020</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nconst render = (condition = false , children = null) => {\n  return condition ? children : null;\n};\n\n\nexport const If = props => \n  React.Children.map(props.children, child =>\n    React.cloneElement(child, {condition: props.condition}),\n  ); \n\nexport const Then = props => render(props.condition, props.children);\nexport const Else = props => render(!props.condition, props.children);","import React from 'react';\nimport { If, Then } from '../if/if';\nimport ReactJson from 'react-json-view';\n\nfunction Result(props) {\n  return (\n    <>\n      <If condition={props.response.data}>\n        <Then>\n          <ReactJson name='Headers' src={props.headers} />\n          <ReactJson name='Response' src={props.response} />\n        </Then>\n      </If>\n    </>\n  );\n}\n\nexport default Result;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass History extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {history:[]};\n    this.handlerClick = this.handlerClick.bind(this);\n  }\n  //after rendering\n  componentDidMount(){\n    const history = JSON.parse(localStorage.getItem('history'));\n    console.log(history);\n    this.setState({history});\n  }\n\n  // getting the method, url, data from the input , on click do this then pass them to the parent app\n  handlerClick(e) {\n    let array = e.target.value.split('  ');\n    console.log(array);\n    if (array[5]) {\n      let method = array[1];\n      let url = array[3];\n      let data = array[5];\n      this.props.runHandler(method,url,data);\n    }\n    else {\n      let method = array[1];\n      let url = array[3];\n      this.props.runHandler(method,url); \n    }\n  }\n\n  //function that will put the method,url,body from the local storage in an input to access them on click\n  getDataLocal() {\n    let LocalStorage = JSON.parse(localStorage.getItem('history'));\n   \n    if (LocalStorage) {\n      return LocalStorage.map((item, i) => {\n        if (item.body) { ////replace the input in a button and li \n          let body = JSON.stringify(item.body);\n          return <li key={i} >\n            <input type='text' onClick={this.handlerClick} value={`method:  ${item.method}  url:  ${item.url}  body:  ${body}`} />\n          </li>;\n        }\n        else {\n          return <li key={i}>\n            <input type='text'  onClick={this.handlerClick} value={`method:  ${item.method}  url:  ${item.url}`} />\n          </li>;\n        }\n      });\n    }\n  }\n\n  render(){\n    return(\n      <>\n        <p>Choose your history then hit GO!</p>\n        <ul>\n          <Link to=\"/\">{this.getDataLocal()}</Link>\n        </ul>\n      </>\n    );\n  }\n\n}\n\nexport default History;\n\n\n//<div><pre>\"Response\":{JSON.stringify(query.response,null,2)}</pre></div>\n// {\n//     this.state.history.map((query,i) => {\n//         this.key = i;\n//         return (<li key={this.key}>\n//           <span id=\"methodHis\">{query.method}</span> <span id=\"urlHis\">{query.url}</span>\n//           <Link to=\"/\">{this.getDataLocal()}</Link>Run!\n//         </li>);\n//       })\n//     }","\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport Form from './components/form/form';\nimport Header from './components/header/header';\nimport Footer from './components/footer/footer';\nimport Results from './components/results/results';\nimport History from './components/history/history';\nimport './App.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { Headers:{}, Response:{}, loading:false };\n  }\n  // will recieve response and headers from the form submit ,then pass them to result component\n  handleForm = (data,headers) => {\n    this.setState({ Headers: {headers}, Response:{data} });\n  };\n\n  // recieving the url ,method ,data from the history click ,then pass them to form component\n  handleRerunHistory = (method , url, data) => {\n    let bodyData = JSON.stringify(data);\n    this.setState({ method, url, body:{bodyData} });\n  };\n\n\n  render() {\n    return (\n      <>\n        <Header />\n\n        <Route exact path=\"/\">\n          <Form handler={this.handleForm} method={this.state.method} url={this.state.url} body={this.state.body}  />\n          <Results response={this.state.Response} headers={this.state.Headers} loading={this.state.loading} />\n        </Route>\n\n        <Route exact path=\"/history\">\n          <History runHandler={this.handleRerunHistory} />\n        </Route>\n\n        <Footer />\n      </>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <React.StrictMode>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </React.StrictMode>\n    );\n  }\n}\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}